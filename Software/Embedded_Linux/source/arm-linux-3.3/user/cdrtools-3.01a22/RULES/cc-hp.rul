#ident "@(#)cc-hp.rul	1.13 13/11/13 "
###########################################################################
# Written 1996-2013 by J. Schilling
###########################################################################
#
# Platform dependent MACROS for HP/UC cc
#
###########################################################################
# Copyright (c) J. Schilling
###########################################################################
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# See the file CDDL.Schily.txt in this distribution for details.
# A copy of the CDDL is also available via the Internet at
# http://www.opensource.org/licenses/cddl1.txt
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file CDDL.Schily.txt from this distribution.
###########################################################################

CPPFLAGS=	-DSCHILY_BUILD $(CPPOPTS) $(CPPOPTX) $(OSINCDIRS:%=-I%) $(OSDEFS) $(OSDEFSX)
CFLAGS=		$(COPTS) $(CWARNOPTS) $(COPTOPT) $(HPCOPTOPT) $(COPTX)
C++FLAGS=	$(C++OPTS) $(C++WARNOPTS) $(C++OPTOPT) $(HPC++OPTOPT) $(C++OPTX)

CPPOPTS=	-I$(ARCHDIR) -I$(OINCSDIR) $(INCDIRS:%=-I%) $(INCDIRSX:%=-I%)
#
# -Ae	      -> ANSI C (non-bundled C only - bundled C ignores -Ae)
# +DAportable -> Create Parisc-1.1 code
#
HP_CC_ANSI_OPT=	-Ae	# May be overwritten later from $(OINCSDIR)/rules.cnf
HP_CC_OPT_OPT=	-O	# May be overwritten later from $(OINCSDIR)/rules.cnf
HP_CC_GPROF_OPT= -G	# May be overwritten later from $(OINCSDIR)/rules.cnf

COPTS=		$(HP_CC_ANSI_OPT) +DAportable
CWOPTS=		
COPTOPT=	$(HP_CC_OPT_OPT)
COPTDYN=	+z
COPTGPROF=	$(HP_CC_GPROF_OPT)
C++OPTS=
C++WOPTS=	
#C++OPTOPT=	-O
#C++OPTDYN=	-Kpic
#C++OPTGPROF=	-xpg

LIB_PREFIX=	lib
LIB_SUFFIX=	.a
SHL_SUFFIX=	.sl

LIBS_PATH=	-L$(OLIBSDIR)
LIBS_PATH_STATIC= -L$(OLIBSDIR_STATIC) 

LDFLAGS=	$(LDOPTS) $(LDOPTX)
LDLIBS=		$(LIBS) $(LIBX)

#LDOPTS=		$(LIBS_PATH) $(LDPATH) $(RUNPATH)
LDOPTS=		$(LIBS_PATH) $(LDPATH)
LDOPTDYN=	-Wl,-soname,$(TARGET)
LNDYNLIB=	@

FLOAT_OPTIONS=	

__CC_COM=	$(_UNIQ)$(CC)
___CC_COM=	$(__CC_COM:$(_UNIQ)=$(CC_COM_DEF))
CC_COM=		$(___CC_COM:$(_UNIQ)%=%)

__CC++_COM=	$(_UNIQ)$(CCC)
___CC++_COM=	$(__CC++_COM:$(_UNIQ)=$(CC++_COM_DEF))
CC++_COM=	$(___CC++_COM:$(_UNIQ)%=%)

CC_COM_DEF=	cc
CC++_COM_DEF=	echo "C++ not yet supported"; exit -1; :
CC=		$(CC_COM_DEF)
CCC=		$(CC++_COM_DEF)

CCCC=		@echo "	==> COMPILING \"$@\""; $(CC_COM)
LDCC=		@echo "	==> LINKING \"$@\""; $(CC_COM)
DYNLD=		@echo "	==> LINKING dynamic library \"$@\""; $(CC_COM)

RMDEP=		:
MKDEP=		@echo "	==> MAKING DEPENDENCIES \"$@\""; $(RMDEP); $(SRCROOT)/conf/mkdep-hpux.sh
MKDEP_OUT=

CC++ =		@echo "	==> COMPILING \"$@\""; $(CC++_COM)
LDCC++ =	@echo "	==> LINKING \"$@\""; $(CC++_COM)
DYNLDC++ =	@echo "	==> LINKING dynamic library \"$@\""; $(CC++_COM)
MKC++DEP=	@echo "	==> MAKING DEPENDENCIES \"$@\""; $(RMDEP); $(CC++_COM); echo "Cannot do -M with unknown CC"; :
MKC++DEP_OUT=
